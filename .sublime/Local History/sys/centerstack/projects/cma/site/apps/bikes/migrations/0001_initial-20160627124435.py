# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-31 15:39
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Motorcycle')),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.IntegerField(blank=True, choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017)], default=2016, null=True)),
                ('displacement', models.CharField(blank=True, max_length=10, null=True)),
                ('current_milage', models.IntegerField(blank=True, default=0, null=True)),
                ('rental_price', models.IntegerField(blank=True, null=True, verbose_name=b'Rental Price')),
                ('insurance_price', models.IntegerField(blank=True, null=True, verbose_name=b'Insurance Price')),
                ('deposit_factor', models.IntegerField(blank=True, default=50, null=True, verbose_name=b'Deposit Factor')),
                ('damage_deposit', models.IntegerField(blank=True, default=1500, null=True, verbose_name=b'Damage Deposit')),
                ('image', models.FileField(blank=True, null=True, upload_to=b'bikes/')),
                ('oil_change_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('oil_change_milage', models.IntegerField(blank=True, default=models.IntegerField(blank=True, default=0, null=True), null=True)),
                ('air_filter_clean_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('air_filter_clean_milage', models.IntegerField(blank=True, default=models.IntegerField(blank=True, default=0, null=True), null=True)),
                ('sprocket_and_chain_change_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('sprocket_and_chain_change_milage', models.IntegerField(blank=True, default=models.IntegerField(blank=True, default=0, null=True), null=True)),
                ('valve_adjustment_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('valve_adjustment_milage', models.IntegerField(blank=True, default=models.IntegerField(blank=True, default=0, null=True), null=True)),
                ('brake_fluid_change_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('brake_fluid_change_milage', models.IntegerField(blank=True, default=models.IntegerField(blank=True, default=0, null=True), null=True)),
                ('coolant_change_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('coolant_change_milage', models.IntegerField(blank=True, default=models.IntegerField(blank=True, default=0, null=True), null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('milage_per_oil_change', models.IntegerField(blank=True, default=4000, null=True)),
                ('milage_per_air_filter_clean', models.IntegerField(blank=True, default=6000, null=True)),
                ('milage_per_sprocket_and_chain_change', models.IntegerField(blank=True, default=20000, null=True)),
                ('milage_per_valve_adjustment', models.IntegerField(blank=True, default=15000, null=True)),
                ('milage_per_brake_fluid_change', models.IntegerField(blank=True, default=15000, null=True)),
                ('milage_per_coolant_change', models.IntegerField(blank=True, default=20000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BikeAccessories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('price_period', models.CharField(blank=True, choices=[(b'One-Time', b'One-Time'), (b'Daily', b'Daily'), (b'Hourly', b'Hourly')], default=b'Per Day', max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Bike Accessories',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Color',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Manufacturer',
            },
        ),
        migrations.AddField(
            model_name='bike',
            name='color',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bikes.Color'),
        ),
        migrations.AddField(
            model_name='bike',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bikes.Manufacturer'),
        ),
    ]
